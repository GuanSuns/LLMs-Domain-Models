{
    "Load a package into a truck": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (package-at ?p - package ?l - location): true if the package ?p is at the location ?l\n2. (truck-at ?t - truck ?l - location): true if the truck ?t is at the location ?l\n3. (package-in-truck ?p - package ?t - truck): true if the package ?p is in the truck ?t\n4. (plane-at ?a - plane ?l - location): true if the airplane ?a is at the location ?l\n5. (location-is-airport ?l - location): true if the location ?l is an airport\n6. (package-in-plane ?p - package ?a - plane): true if the package ?p is in the airplane ?a\n7. (location-in-city ?l - location ?c - city): true if the location ?l is in the city ?c\n8. (move-all-packages ?t - truck ?from - location ?to - location): true if all packages in the truck ?t are moved from location ?from to location ?to\n9. (move-all-packages-in-plane ?a - plane ?from - location ?to - location): true if all packages in the airplane ?a are moved from location ?from to location ?to",
        "action_desc": "This action enables the agent to load a package into a truck. For example, load a package_1 into a truck_1.",
        "iter_1": {
            "llm_output": "1. ?p - package: the package to load\n2. ?t - truck: the truck to load the package into\n3. ?l - location: the location where the package and truck are\n\nPreconditions:\n```\n(and\n    (package-at ?p ?l)\n    (truck-at ?t ?l)\n)\n```\n\nEffects:\n```\n(and\n    (not (package-at ?p ?l))\n    (package-in-truck ?p ?t)\n)\n```\n\nNew Predicates:\nNo newly defined predicate"
        },
        "llm_output": "1. ?p - package: the package to load\n2. ?t - truck: the truck to load the package into\n3. ?l - location: the location where the package and truck are\n\nPreconditions:\n```\n(and\n    (package-at ?p ?l)\n    (truck-at ?t ?l)\n)\n```\n\nEffects:\n```\n(and\n    (not (package-at ?p ?l))\n    (package-in-truck ?p ?t)\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "new_predicates": []
    },
    "Unload a package from a truck": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (package-at ?p - package ?l - location): true if the package ?p is at the location ?l\n2. (truck-at ?t - truck ?l - location): true if the truck ?t is at the location ?l\n3. (package-in-truck ?p - package ?t - truck): true if the package ?p is in the truck ?t\n4. (plane-at ?a - plane ?l - location): true if the airplane ?a is at the location ?l\n5. (location-is-airport ?l - location): true if the location ?l is an airport\n6. (package-in-plane ?p - package ?a - plane): true if the package ?p is in the airplane ?a\n7. (location-in-city ?l - location ?c - city): true if the location ?l is in the city ?c\n8. (move-all-packages ?t - truck ?from - location ?to - location): true if all packages in the truck ?t are moved from location ?from to location ?to\n9. (move-all-packages-in-plane ?a - plane ?from - location ?to - location): true if all packages in the airplane ?a are moved from location ?from to location ?to",
        "action_desc": "This action enables the agent to unload a package from a truck. For example, unload a package_1 from a truck_1.",
        "iter_1": {
            "llm_output": "1. ?p - package: the package to unload\n2. ?t - truck: the truck from which the package will be unloaded\n3. ?l - location: the location where the package will be unloaded\n\nPreconditions:\n```\n(and\n    (package-in-truck ?p ?t)\n    (truck-at ?t ?l)\n)\n```\n\nEffects:\n```\n(and\n    (not (package-in-truck ?p ?t))\n    (package-at ?p ?l)\n)\n```\n\nNew Predicates:\nNo newly defined predicate"
        },
        "llm_output": "1. ?p - package: the package to unload\n2. ?t - truck: the truck from which the package will be unloaded\n3. ?l - location: the location where the package will be unloaded\n\nPreconditions:\n```\n(and\n    (package-in-truck ?p ?t)\n    (truck-at ?t ?l)\n)\n```\n\nEffects:\n```\n(and\n    (not (package-in-truck ?p ?t))\n    (package-at ?p ?l)\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "new_predicates": []
    },
    "Load a package into an airplane": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (package-at ?p - package ?l - location): true if the package ?p is at the location ?l\n2. (truck-at ?t - truck ?l - location): true if the truck ?t is at the location ?l\n3. (package-in-truck ?p - package ?t - truck): true if the package ?p is in the truck ?t\n4. (plane-at ?a - plane ?l - location): true if the airplane ?a is at the location ?l\n5. (location-is-airport ?l - location): true if the location ?l is an airport\n6. (package-in-plane ?p - package ?a - plane): true if the package ?p is in the airplane ?a\n7. (location-in-city ?l - location ?c - city): true if the location ?l is in the city ?c\n8. (move-all-packages ?t - truck ?from - location ?to - location): true if all packages in the truck ?t are moved from location ?from to location ?to\n9. (move-all-packages-in-plane ?a - plane ?from - location ?to - location): true if all packages in the airplane ?a are moved from location ?from to location ?to",
        "action_desc": "This action enables the agent to load a package into an airplane. For example, load a package_1 into an airplane_1.",
        "iter_1": {
            "llm_output": "1. ?p - package: the package to load into the airplane\n2. ?a - plane: the airplane to load the package into\n3. ?l - location: the location where the airplane and package are\n\nPreconditions:\n```\n(and\n    (package-at ?p ?l)\n    (plane-at ?a ?l)\n    (location-is-airport ?l)\n)\n```\n\nEffects:\n```\n(and\n    (not (package-at ?p ?l))\n    (package-in-plane ?p ?a)\n)\n```\n\nNew Predicates:\nNo newly defined predicate"
        },
        "llm_output": "1. ?p - package: the package to load into the airplane\n2. ?a - plane: the airplane to load the package into\n3. ?l - location: the location where the airplane and package are\n\nPreconditions:\n```\n(and\n    (package-at ?p ?l)\n    (plane-at ?a ?l)\n    (location-is-airport ?l)\n)\n```\n\nEffects:\n```\n(and\n    (not (package-at ?p ?l))\n    (package-in-plane ?p ?a)\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "new_predicates": []
    },
    "Unload a package from an airplane": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (package-at ?p - package ?l - location): true if the package ?p is at the location ?l\n2. (truck-at ?t - truck ?l - location): true if the truck ?t is at the location ?l\n3. (package-in-truck ?p - package ?t - truck): true if the package ?p is in the truck ?t\n4. (plane-at ?a - plane ?l - location): true if the airplane ?a is at the location ?l\n5. (location-is-airport ?l - location): true if the location ?l is an airport\n6. (package-in-plane ?p - package ?a - plane): true if the package ?p is in the airplane ?a\n7. (location-in-city ?l - location ?c - city): true if the location ?l is in the city ?c\n8. (move-all-packages ?t - truck ?from - location ?to - location): true if all packages in the truck ?t are moved from location ?from to location ?to\n9. (move-all-packages-in-plane ?a - plane ?from - location ?to - location): true if all packages in the airplane ?a are moved from location ?from to location ?to",
        "action_desc": "This action enables the agent to unload a package from an airplane. For example, unload a package_1 from an airplane_1.",
        "iter_1": {
            "llm_output": "1. ?p - package: the package to unload\n2. ?a - plane: the airplane from which the package will be unloaded\n3. ?l - location: the location where the package will be unloaded\n\nPreconditions:\n```\n(and\n    (package-in-plane ?p ?a)\n    (plane-at ?a ?l)\n    (location-is-airport ?l)\n)\n```\n\nEffects:\n```\n(and\n    (not (package-in-plane ?p ?a))\n    (package-at ?p ?l)\n)\n```\n\nNew Predicates:\nNo newly defined predicate"
        },
        "llm_output": "1. ?p - package: the package to unload\n2. ?a - plane: the airplane from which the package will be unloaded\n3. ?l - location: the location where the package will be unloaded\n\nPreconditions:\n```\n(and\n    (package-in-plane ?p ?a)\n    (plane-at ?a ?l)\n    (location-is-airport ?l)\n)\n```\n\nEffects:\n```\n(and\n    (not (package-in-plane ?p ?a))\n    (package-at ?p ?l)\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "new_predicates": []
    },
    "Drive a truck from one location to another in a city": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (package-at ?p - package ?l - location): true if the package ?p is at the location ?l\n2. (truck-at ?t - truck ?l - location): true if the truck ?t is at the location ?l\n3. (package-in-truck ?p - package ?t - truck): true if the package ?p is in the truck ?t\n4. (plane-at ?a - plane ?l - location): true if the airplane ?a is at the location ?l\n5. (location-is-airport ?l - location): true if the location ?l is an airport\n6. (package-in-plane ?p - package ?a - plane): true if the package ?p is in the airplane ?a\n7. (location-in-city ?l - location ?c - city): true if the location ?l is in the city ?c\n8. (move-all-packages ?t - truck ?from - location ?to - location): true if all packages in the truck ?t are moved from location ?from to location ?to\n9. (move-all-packages-in-plane ?a - plane ?from - location ?to - location): true if all packages in the airplane ?a are moved from location ?from to location ?to",
        "action_desc": "This action enables the agent to drive a truck from one location to another in a city. For example, drive a truck_1 from location_1 to location_2 in city_1.",
        "iter_1": {
            "llm_output": "1. ?t - truck: the truck to be driven\n2. ?from - location: the starting location of the truck\n3. ?to - location: the destination location of the truck\n4. ?c - city: the city in which the truck is being driven\n\nPreconditions:\n```\n(and\n    (truck-at ?t ?from)\n    (location-in-city ?from ?c)\n    (location-in-city ?to ?c)\n)\n```\n\nEffects:\n```\n(and\n    (not (truck-at ?t ?from))\n    (truck-at ?t ?to)\n    (move-all-packages ?t ?from ?to)\n)\n```\n\nNew Predicates:\n1. (move-all-packages ?t - truck ?from - location ?to - location): true if all packages in the truck ?t are moved from location ?from to location ?to",
            "error_type": "invalid_predicate_names",
            "feedback_msg": "The following predicate(s) have the same name(s) as existing predicate(s):\n1. (move-all-packages ?t - truck ?from - location ?to - location), true if all packages in the truck ?t are moved from location ?from to location ?to; existing predicate with the same name: (move-all-packages ?t - truck ?from - location ?to - location), true if all packages in the truck ?t are moved from location ?from to location ?to\n\nYou should reuse existing predicates whenever possible. If you are reusing existing predicate(s), you shouldn't list them under 'New Predicates'. If existing predicates are not enough and you are devising new predicate(s), please use names that are different from existing ones.\n\nPlease revise the PDDL model to fix this error.\n\nParameters:"
        },
        "llm_output": "1. ?t - truck: the truck to be driven\n2. ?from - location: the starting location of the truck\n3. ?to - location: the destination location of the truck\n4. ?c - city: the city in which the truck is being driven\n\nPreconditions:\n```\n(and\n    (truck-at ?t ?from)\n    (location-in-city ?from ?c)\n    (location-in-city ?to ?c)\n)\n```\n\nEffects:\n```\n(and\n    (not (truck-at ?t ?from))\n    (truck-at ?t ?to)\n    (move-all-packages ?t ?from ?to)\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "iter_2": {
            "llm_output": "1. ?t - truck: the truck to be driven\n2. ?from - location: the starting location of the truck\n3. ?to - location: the destination location of the truck\n4. ?c - city: the city in which the truck is being driven\n\nPreconditions:\n```\n(and\n    (truck-at ?t ?from)\n    (location-in-city ?from ?c)\n    (location-in-city ?to ?c)\n)\n```\n\nEffects:\n```\n(and\n    (not (truck-at ?t ?from))\n    (truck-at ?t ?to)\n    (move-all-packages ?t ?from ?to)\n)\n```\n\nNew Predicates:\nNo newly defined predicate"
        },
        "new_predicates": []
    },
    "Fly an airplane from one city to another": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (package-at ?p - package ?l - location): true if the package ?p is at the location ?l\n2. (truck-at ?t - truck ?l - location): true if the truck ?t is at the location ?l\n3. (package-in-truck ?p - package ?t - truck): true if the package ?p is in the truck ?t\n4. (plane-at ?a - plane ?l - location): true if the airplane ?a is at the location ?l\n5. (location-is-airport ?l - location): true if the location ?l is an airport\n6. (package-in-plane ?p - package ?a - plane): true if the package ?p is in the airplane ?a\n7. (location-in-city ?l - location ?c - city): true if the location ?l is in the city ?c\n8. (move-all-packages ?t - truck ?from - location ?to - location): true if all packages in the truck ?t are moved from location ?from to location ?to\n9. (move-all-packages-in-plane ?a - plane ?from - location ?to - location): true if all packages in the airplane ?a are moved from location ?from to location ?to",
        "action_desc": "This action enables the agent to fly an airplane from one city's airport to another. The airports are locations in the city. For example, fly an airplane_1 from location_0 to location_1.",
        "iter_1": {
            "llm_output": "1. ?a - plane: the airplane to fly\n2. ?from - location: the departure location (airport) in the city\n3. ?to - location: the destination location (airport) in the city\n\nPreconditions:\n```\n(and\n    (plane-at ?a ?from)\n    (location-is-airport ?from)\n    (location-is-airport ?to)\n    (location-in-city ?from ?c1)\n    (location-in-city ?to ?c2)\n    (not (= ?from ?to))\n    (not (= ?c1 ?c2))\n)\n```\n\nEffects:\n```\n(and\n    (not (plane-at ?a ?from))\n    (plane-at ?a ?to)\n    (move-all-packages-in-plane ?a ?from ?to)\n)\n```\n\nNew Predicates:\n1. (move-all-packages-in-plane ?a - plane ?from - location ?to - location): true if all packages in the airplane ?a are moved from location ?from to location ?to",
            "error_type": "invalid_predicate_names",
            "feedback_msg": "The following predicate(s) have the same name(s) as existing predicate(s):\n1. (move-all-packages-in-plane ?a - plane ?from - location ?to - location), true if all packages in the airplane ?a are moved from location ?from to location ?to; existing predicate with the same name: (move-all-packages-in-plane ?a - plane ?from - location ?to - location), true if all packages in the airplane ?a are moved from location ?from to location ?to\n\nYou should reuse existing predicates whenever possible. If you are reusing existing predicate(s), you shouldn't list them under 'New Predicates'. If existing predicates are not enough and you are devising new predicate(s), please use names that are different from existing ones.\n\nPlease revise the PDDL model to fix this error.\n\nParameters:"
        },
        "llm_output": "1. ?a - plane: the airplane to fly\n2. ?from - location: the departure location (airport) in the city\n3. ?to - location: the destination location (airport) in the city\n4. ?c1 - city: the city where the departure location is\n5. ?c2 - city: the city where the destination location is\n\nPreconditions:\n```\n(and\n    (plane-at ?a ?from)\n    (location-is-airport ?from)\n    (location-is-airport ?to)\n    (location-in-city ?from ?c1)\n    (location-in-city ?to ?c2)\n    (not (= ?from ?to))\n    (not (= ?c1 ?c2))\n)\n```\n\nEffects:\n```\n(and\n    (not (plane-at ?a ?from))\n    (plane-at ?a ?to)\n    (move-all-packages-in-plane ?a ?from ?to)\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "iter_2": {
            "llm_output": "1. ?a - plane: the airplane to fly\n2. ?from - location: the departure location (airport) in the city\n3. ?to - location: the destination location (airport) in the city\n\nPreconditions:\n```\n(and\n    (plane-at ?a ?from)\n    (location-is-airport ?from)\n    (location-is-airport ?to)\n    (location-in-city ?from ?c1)\n    (location-in-city ?to ?c2)\n    (not (= ?from ?to))\n    (not (= ?c1 ?c2))\n)\n```\n\nEffects:\n```\n(and\n    (not (plane-at ?a ?from))\n    (plane-at ?a ?to)\n    (move-all-packages-in-plane ?a ?from ?to)\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
            "error_type": "invalid_predicate_usage",
            "feedback_msg": "In the preconditions and in the predicate `location-in-city`, there is an unknown parameter ?c1. You should define all parameters (i.e., name and type) under the `Parameters` list. Please revise the PDDL model to fix this error (and other potentially similar errors).\n\nParameters:"
        },
        "new_predicates": [],
        "iter_3": {
            "llm_output": "1. ?a - plane: the airplane to fly\n2. ?from - location: the departure location (airport) in the city\n3. ?to - location: the destination location (airport) in the city\n4. ?c1 - city: the city where the departure location is\n5. ?c2 - city: the city where the destination location is\n\nPreconditions:\n```\n(and\n    (plane-at ?a ?from)\n    (location-is-airport ?from)\n    (location-is-airport ?to)\n    (location-in-city ?from ?c1)\n    (location-in-city ?to ?c2)\n    (not (= ?from ?to))\n    (not (= ?c1 ?c2))\n)\n```\n\nEffects:\n```\n(and\n    (not (plane-at ?a ?from))\n    (plane-at ?a ?to)\n    (move-all-packages-in-plane ?a ?from ?to)\n)\n```\n\nNew Predicates:\nNo newly defined predicate"
        }
    }
}