{
    "Open a container": {
        "parameters": [
            "?c - container: the container to open"
        ],
        "preconditions": "(and\n  (container-closed ?c)\n)",
        "effects": "(and\n  (not (container-closed ?c))\n  (container-open ?c)\n)",
        "action_desc": "This action enables the robot to open a container. For example, the robot can open a boot.",
        "translated_preconditions": [
            "the container ?c is closed"
        ],
        "translated_effects": [
            "the container ?c is not closed",
            "the container ?c is open"
        ],
        "short": "open a container ?c",
        "prompt_example": "open boot"
    },
    "Close a container": {
        "parameters": [
            "?c - container: the container to close"
        ],
        "preconditions": "(and\n  (container-open ?c)\n)",
        "effects": "(and\n  (not (container-open ?c))\n  (container-closed ?c)\n)",
        "action_desc": "This action enables the robot to close a container. For example, the robot can close a boot.",
        "translated_preconditions": [
            "the container ?c is open"
        ],
        "translated_effects": [
            "the container ?c is not open",
            "the container ?c is closed"
        ],
        "short": "close a container ?c",
        "prompt_example": "close boot_1"
    },
    "Fetch an object from a container": {
        "parameters": [
            "?x - small_object: the object to take from the container",
            "?c - container: the container from which the object is to be taken"
        ],
        "preconditions": "(and\n  (container-open ?c)\n  (object-in-container ?x ?c)\n)",
        "effects": "(and\n  (not (object-in-container ?x ?c))\n  (robot-holding ?x)\n)",
        "action_desc": "This action enables the robot to take an object from a container. For example, the robot can fetch jack from the boot or the robot can fetch wheel_1 from the boot.",
        "translated_preconditions": [
            "the container ?c is open",
            "the object ?x is inside the container ?c"
        ],
        "translated_effects": [
            "the object ?x is not inside the container ?c",
            "the robot is holding the object ?x"
        ],
        "short": "take a small object ?x from a container ?c",
        "prompt_example": "take jack from the boot"
    },
    "Put away an object into a container": {
        "parameters": [
            "?x - small_object: the object to put into the container",
            "?c - container: the container to put the object into"
        ],
        "preconditions": "(and\n  (robot-holding ?x)\n  (container-open ?c)\n)",
        "effects": "(and\n  (not (robot-holding ?x))\n  (object-in-container ?x ?c)\n)",
        "action_desc": "This action enables the robot to put an object into a container. For example, the robot can put away jack into the boot or the robot can put away wheel_1 into the boot.",
        "translated_preconditions": [
            "the robot is holding the object ?x",
            "the container ?c is open"
        ],
        "translated_effects": [
            "the robot is not holding the object ?x",
            "the object ?x is inside the container ?c"
        ],
        "short": "put an object ?x into a container ?c",
        "prompt_example": "put away jack into the boot"
    },
    "Loosen a nut in a hub": {
        "parameters": [
            "?n - nut: the nut to be loosened",
            "?h - hub: the hub where the nut is located",
            "?w - tool: the wrench to be used for loosening the nut"
        ],
        "preconditions": "(and\n  (nut-on-hub ?n ?h)\n  (hub-on-ground ?h)\n  (nut-tight ?n ?h)\n  (robot-holding ?w)\n  (is-wrench ?w)\n)",
        "effects": "(and\n  (not (nut-tight ?n ?h))\n  (nut-loose ?n ?h)\n)",
        "action_desc": "This action enables the robot to loosen a nut in a hub. For example, the robot can loosen nut_1 in hub_1. To safely perform this action, the hub needs to be on the ground (i.e., not jacked-up). You may assume the nut remains on the hub after the robot loosens it.",
        "translated_preconditions": [
            "the nut ?n is on the hub ?h",
            "the hub ?h is on the ground (not jacked-up)",
            "the nut ?n is tight on the hub ?h",
            "the robot is holding the tool ?w",
            "the tool ?w is a wrench"
        ],
        "translated_effects": [
            "the nut ?n is not tight on the hub ?h",
            "the nut ?n is loose on the hub ?h"
        ],
        "short": "loosen nut ?n on hub ?h using wrench ?w",
        "prompt_example": "loosen nut_1 on hub_1 using wrench_2"
    },
    "Tighten a nut in a hub": {
        "parameters": [
            "?n - nut: the nut to be tightened",
            "?h - hub: the hub where the nut is to be tightened",
            "?w - tool: the wrench to be used for tightening the nut"
        ],
        "preconditions": "(and\n  (nut-loose ?n ?h)\n  (nut-on-hub ?n ?h)\n  (hub-on-ground ?h)\n  (robot-holding ?w)\n  (is-wrench ?w)\n)",
        "effects": "(and\n  (not (nut-loose ?n ?h))\n  (nut-tight ?n ?h)\n)",
        "action_desc": "",
        "translated_preconditions": [
            "the nut ?n is loose on the hub ?h",
            "the nut ?n is on the hub ?h",
            "the hub ?h is on the ground (not jacked-up)",
            "the robot is holding the tool ?w",
            "the tool ?w is a wrench"
        ],
        "translated_effects": [
            "the nut ?n is not loose on the hub ?h",
            "the nut ?n is tight on the hub ?h"
        ],
        "short": "Tighten nut ?n on hub ?h using wrench ?w.",
        "prompt_example": "Tighten nut_n2 on hub_h3 using wrench_w1."
    },
    "Jack up a hub": {
        "parameters": [
            "?h - hub: the hub to jack up",
            "?j - tool: the jack to use for jacking up the hub"
        ],
        "preconditions": "(and\n  (hub-on-ground ?h)\n  (is-jack ?j)\n  (robot-holding ?j)\n)",
        "effects": "(and\n  (not (hub-on-ground ?h))\n  (hub-jacked-up ?h)\n)",
        "action_desc": "This action enables the robot to jack up a hub. For example, the robot can jack up hub_1.",
        "translated_preconditions": [
            "the hub ?h is on the ground (not jacked-up)",
            "the tool ?j is a jack",
            "the robot is holding the object ?j"
        ],
        "translated_effects": [
            "the hub ?h is not on the ground",
            "the hub ?h is jacked up"
        ],
        "short": "jack up a hub ?h using a jack ?j",
        "prompt_example": "jack up hub_1 using jack_3"
    },
    "Jack down a hub": {
        "parameters": [
            "?h - hub: the hub to jack down",
            "?j - tool: the jack to use for jacking down the hub"
        ],
        "preconditions": "(and\n  (hub-jacked-up ?h)\n  (robot-holding ?j)\n  (is-jack ?j)\n)",
        "effects": "(and\n  (not (hub-jacked-up ?h))\n  (hub-on-ground ?h)\n)",
        "action_desc": "",
        "translated_preconditions": [
            "the hub ?h is jacked up (not on the ground)",
            "the robot is holding the object ?j",
            "the tool ?j is a jack"
        ],
        "translated_effects": [
            "the hub ?h is not jacked up",
            "the hub ?h is on the ground"
        ],
        "short": "jack down hub ?h using tool ?j",
        "prompt_example": "jack down hub_1 using tool_2"
    },
    "Unfasten a hub": {
        "parameters": [
            "?h - hub: the hub to unfasten",
            "?n - nut: the nut on the hub",
            "?w - tool: the wrench to use for unfastening the hub"
        ],
        "preconditions": "(and\n  (nut-on-hub ?n ?h)\n  (nut-loose ?n ?h)\n  (hub-jacked-up ?h)\n  (is-wrench ?w)\n  (robot-holding ?w)\n)",
        "effects": "(and\n  (not (nut-on-hub ?n ?h))\n  (robot-holding ?n)\n  (hub-unfastened ?h)\n)",
        "action_desc": "This action enables the robot to unfasten a hub. To achieve this, the robot needs to first remove the nut on the hub and then unfasten the hub. For example, the robot can unfasten hub_1 that has nut_1. To safely perform this action, the hub needs to be jacked up. At the end of this action, the hub should be unfastened, and nut should be detached from the hub and held by the robot.",
        "translated_preconditions": [
            "the nut ?n is on the hub ?h",
            "the nut ?n is loose on the hub ?h",
            "the hub ?h is jacked up (not on the ground)",
            "the tool ?w is a wrench",
            "the robot is holding the tool ?w"
        ],
        "translated_effects": [
            "the nut ?n is not on the hub ?h",
            "the robot is holding the object ?n",
            "the hub ?h is unfastened"
        ],
        "short": "use tool ?w to remove nut ?n from hub ?h and unfasten it, holding the nut at the end",
        "prompt_example": "use wrench_1 to remove nut_1 from hub_1 and unfasten it, holding the nut at the end"
    },
    "Fasten a hub": {
        "parameters": [
            "?h - hub: the hub to fasten",
            "?n - nut: the nut to put on the hub"
        ],
        "preconditions": "(and\n  (hub-jacked-up ?h)\n  (robot-holding ?n)\n  (hub-unfastened ?h)\n)",
        "effects": "(and\n  (not (robot-holding ?n))\n  (nut-on-hub ?n ?h)\n  (nut-loose ?n ?h)\n  (not (hub-unfastened ?h))\n)",
        "action_desc": "",
        "translated_preconditions": [
            "the hub ?h is jacked up (not on the ground)",
            "the robot is holding the object ?n",
            "the hub ?h is unfastened"
        ],
        "translated_effects": [
            "the robot is not holding the object ?n",
            "the nut ?n is on the hub ?h",
            "the nut ?n is loose on the hub ?h",
            "the hub ?h is not unfastened"
        ],
        "short": "fasten a nut ?n on hub ?h",
        "prompt_example": "fasten nut_1 on hub_2"
    },
    "Remove wheel from hub": {
        "parameters": [
            "?w - wheel: the wheel to remove",
            "?h - hub: the hub from which the wheel is to be removed"
        ],
        "preconditions": "(and\n  (wheel-on-hub ?w ?h)\n  (hub-jacked-up ?h)\n  (hub-unfastened ?h)\n)",
        "effects": "(and\n  (not (wheel-on-hub ?w ?h))\n  (robot-holding ?w)\n)",
        "action_desc": "This action enables the robot to remove a wheel from a hub. For example, the robot can remove wheel_1 from hub_1. Note that the hub needs to be unfastened in order to remove the wheel. To safely perform this action, the hub needs to be jacked up.",
        "translated_preconditions": [
            "the wheel ?w is on the hub ?h",
            "the hub ?h is jacked up (not on the ground)",
            "the hub ?h is unfastened"
        ],
        "translated_effects": [
            "the wheel ?w is not on the hub ?h",
            "the robot is holding the object ?w"
        ],
        "short": "remove a wheel ?w from a hub ?h after jacking up the hub",
        "prompt_example": "remove wheel_1 from hub_1 after jacking up the hub"
    },
    "Put wheel on hub": {
        "parameters": [
            "?w - wheel: the wheel to put on the hub",
            "?h - hub: the hub to put the wheel on"
        ],
        "preconditions": "(and\n  (robot-holding ?w)\n  (is-wheel ?w)\n  (hub-unfastened ?h)\n  (hub-jacked-up ?h)\n)",
        "effects": "(and\n  (not (robot-holding ?w))\n  (wheel-on-hub ?w ?h)\n)",
        "action_desc": "This action enables the robot to put a wheel on an unfastened hub. For example, the robot can put wheel_1 on hub_1. Note that the hub needs to be unfastened in order to put on the wheel. To safely perform this action, the hub needs to be jacked up.",
        "translated_preconditions": [
            "the robot is holding the object ?w",
            "the object ?w is a wheel",
            "the hub ?h is unfastened",
            "the hub ?h is jacked up (not on the ground)"
        ],
        "translated_effects": [
            "the robot is not holding the object ?w",
            "the wheel ?w is on the hub ?h"
        ],
        "short": "put a wheel ?w on an unfastened hub ?h after jacking it up",
        "prompt_example": "put wheel_1 on hub_1 after jacking it up"
    },
    "Inflate wheel": {
        "parameters": [
            "?w - wheel: the wheel to inflate",
            "?p - tool: the pump to use for inflating the wheel"
        ],
        "preconditions": "(and\n  (is-wheel ?w)\n  (wheel-intact ?w)\n  (wheel-deflated ?w)\n  (is-pump ?p)\n  (robot-holding ?p)\n)",
        "effects": "(and\n  (not (wheel-deflated ?w))\n  (wheel-inflated ?w)\n)",
        "action_desc": "This action enables the robot to inflate a wheel. For example, the robot can inflate wheel_1. You also need to make sure the wheel is intact.",
        "translated_preconditions": [
            "the object ?w is a wheel",
            "the wheel ?w is intact",
            "the wheel ?w is deflated",
            "the tool ?p is a pump",
            "the robot is holding the object ?p"
        ],
        "translated_effects": [
            "the wheel ?w is not deflated",
            "the wheel ?w is inflated"
        ],
        "short": "inflate a wheel ?w using a pump ?p while ensuring the wheel is intact",
        "prompt_example": "inflate wheel_1 using pump_3 while ensuring the wheel is intact"
    }
}